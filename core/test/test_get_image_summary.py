"""
Testing the get_image_summary function in image_summary.py
"""

from unittest.mock import Mock, patch
from core.utils.image_summary import ImageSummary
from base_test_case import BaseTestCase


class TestImageSummary(BaseTestCase):
    """
    Tests the get_image_summary function in image_summary.py
    """

    def setUp(self):
        self.img_summary = ImageSummary(
            "mock_base",
            "mock_key",
            "mock_deployment"
        )

    @patch('requests.post')
    @patch('json.loads')
    def test_get_image_summary(self, loads_patch, post_patch):
        """
        Trivial test for get_image_summary
        """
        image = "data:image/"
        mock_response = {'choices': [{'message': {'content': 'mock_content'}}]}
        post_patch.return_value = Mock()
        loads_patch.return_value = mock_response
        self.assertEqual(self.img_summary.get_image_summary(image),
                         "mock_content")
        post_patch.assert_called()
        loads_patch.assert_called()

    @patch('requests.post')
    @patch('json.loads')
    def test_get_image_summary_no_response(self, loads_patch, post_patch):
        """
        Tests that get_image_summary returns an error message when
        there is no response
        """
        image = "data:image/"
        mock_response = {'choices': [{'message': {'content': None}}]}
        post_patch.return_value = Mock()
        loads_patch.return_value = mock_response
        with self.assertRaisesRegex(
                RuntimeError,
                "No response generated by GPT-4 Vision. Please try again."):
            self.img_summary.get_image_summary(image)
        post_patch.assert_called()
        loads_patch.assert_called()

    def test_get_image_summary_invalid_image(self):
        """
        Tests that get_image_summary returns an error message when the
        image is invalid
        """
        image = "invalid_image"
        with self.assertRaisesRegex(
                RuntimeError,
                "Image string is not valid. "
                "Please try again with a valid Image."):
            self.img_summary.get_image_summary(image)
