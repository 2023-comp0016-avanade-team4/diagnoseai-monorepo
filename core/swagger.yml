openapi: 3.1.0
info:
  title: Core API
  description: |-
    This is the Core API
  version: 0.0.1
servers:
  - url: https://diagnoseai-core-apis.azure-api.net
paths:
  /chat_connection:
    post:
      summary: Creates a pre-authenticated chat connection for the given user ID
      description: Creates a pre-authenticated chat connection (WebSockets) for the given user ID
      requestBody:
        description: Request for a pre-authenticated chat connection
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatConnectionRequest"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatConnectionResponse"
        "500":
          description: "Failure. Likely a JSON parsing issue"
      security:
        - api_key: []
  /chat_history:
    get:
      summary: Gets the chat history for a given conversation ID
      description: Gets the chat history for a given conversation ID (todo, this should eventually be authenticated as well)
      parameters:
        - name: conversation_id
          in: query
          description: ID of the conversation
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatHistoryResponse"
      security:
        - api_key: []
  /work_order:
    get:
      summary: Retrieves work orders for a specific user
      description: Returns a list of work orders associated with the given user ID
      parameters:
        - name: user_id
          in: query
          description: The user ID to fetch work orders for
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of work orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkOrderResponse"
        "400":
          description: Bad request, user_id missing
        "401":
          description: Unauthorized, invalid or missing Auth-Token
      security:
        - auth_token: []
  /chat_done:
    post:
      summary: Marks a conversation as completed
      description: Marks a conversation as completed
      parameters:
        - name: conversation_id
          in: query
          description: The conversation ID to mark done
          required: true
          schema:
            type: string
        - name: done
          in: query
          description: Whether the conversation ID should be marked done
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Conversation was successfully marked done
        "400":
          description: Bad request. Conversation ID is probably missing
        "401":
          description: Unauthorized, invalid or missing Auth-Token
      security:
        - auth_token: []
  /validation_to_production:
    post:
      summary: Moves an index from validation to production
      description: Moves an index from the validation index to the production index.
      requestBody:
        description: Request for a pre-authenticated chat connection
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidationToProductionRequest"
      responses:
        "200":
          description: The Validation Index has been moved successfully
        "401":
          description: Unauthorized access
      security:
        - auth_token: []

components:
  schemas:
    Message:
      type: object
      properties:
        conversationId:
          type: string
          description: Conversation ID
        message:
          type: string
          description: The text within the message
        sender:
          enum: ["bot", "user"]
          description: The sender of this message
        sentAt:
          type: number
          format: date-time
          description: UNIX Timestamp for dat and time when the message was sent.
    ChatConnectionRequest:
      type: object
      properties:
        userId:
          type: string
          description: The UserID this connection belongs to
    ChatConnectionResponse:
      type: object
      properties:
        wsUrl:
          type: string
          description: The WebSocket URL for this connection (temporary)
        ttl:
          type: integer
          description: The time to live for the WebSocket URL in minutes. Ideally, when WebSocket requesting moves to another endpoint, the client will re-request a new websocket URL
    ChatHistoryResponse:
      type: array
      items:
        $ref: "#/components/schemas/Message"
    WorkOrderResponse:
      type: object
      properties:
        order_id:
          type: string
          description: Unique identifier for the work order
        machine_id:
          type: string
          description: Identifier for the machine associated with the work order
        machine_name:
          type: string
          description: Name of the machine associated with the work order
        conversation_id:
          type: string
          description: Identifier for the conversation associated with the work order
        task_name:
          type: string
          description: The name of the task assigned to the user
        task_desc:
          type: string
          description: The description of the task to the user
        resolved:
          type: string
          enum:
            - "completed"
            - "not_completed"
          description: Whether the conversation has been resolved
    ValidationToProductionRequest:
      type: object
      properties:
        validation_index_name:
          type: string
          description: The Validation Index Name
        production_index_name:
          type: string
          description: The Production Index Name

  securitySchemes:
    api_key:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    auth_token:
      type: apiKey
      name: Auth-Token
      in: header
